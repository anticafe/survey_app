apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.surveyapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments << [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true",
                        "dagger.gradle.incremental": "true"
                ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    productFlavors.whenObjectAdded { flavor ->
        println('productFlavors of ${flavor}')
        def flavorData = rootProject.ext[flavor.name]

        flavor.applicationId flavorData.appId

        flavor.buildConfigField 'String', strEndpointUrl, "\"" + flavorData.endpointUrl + "\""
        flavor.buildConfigField 'String', strAccountGrantType, "\"" + flavorData.accountGrantType + "\""
        flavor.buildConfigField 'String', strAccountDefaultUsername, "\"" + flavorData.accountDefaultUsername + "\""
        flavor.buildConfigField 'String', strAccountDefaultPassword, "\"" + flavorData.accountDefaultPassword + "\""
    }
    flavorDimensions "environment"
    productFlavors {
        // Temporarily don't use FAKE flavor
        // fake {}
        dev {}
        prod {}
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    def room_version = "2.2.3"
    implementation "androidx.room:room-runtime:$room_version"
    // Use annotationProcessor instead kapt which will cause compile error
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation "com.google.code.gson:gson:2.8.6"
    implementation "com.squareup.retrofit2:retrofit:2.7.1"
    implementation "com.squareup.retrofit2:converter-gson:2.7.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.3.1"

    implementation "com.jakewharton.timber:timber:4.7.1"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Room test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
